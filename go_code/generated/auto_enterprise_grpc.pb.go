// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.28.2
// source: proto/auto_enterprise.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AutoEnterpriseInfoService_GetTransportTypes_FullMethodName           = "/main.AutoEnterpriseInfoService/GetTransportTypes"
	AutoEnterpriseInfoService_GetCarPark_FullMethodName                  = "/main.AutoEnterpriseInfoService/GetCarPark"
	AutoEnterpriseInfoService_GetDriversByTransport_FullMethodName       = "/main.AutoEnterpriseInfoService/GetDriversByTransport"
	AutoEnterpriseInfoService_GetDriversInfo_FullMethodName              = "/main.AutoEnterpriseInfoService/GetDriversInfo"
	AutoEnterpriseInfoService_GetPassengerRoutesInfo_FullMethodName      = "/main.AutoEnterpriseInfoService/GetPassengerRoutesInfo"
	AutoEnterpriseInfoService_GetTransportMileage_FullMethodName         = "/main.AutoEnterpriseInfoService/GetTransportMileage"
	AutoEnterpriseInfoService_GetTransportRepairCosts_FullMethodName     = "/main.AutoEnterpriseInfoService/GetTransportRepairCosts"
	AutoEnterpriseInfoService_GetGarageInfo_FullMethodName               = "/main.AutoEnterpriseInfoService/GetGarageInfo"
	AutoEnterpriseInfoService_GetCargoTransportationInfo_FullMethodName  = "/main.AutoEnterpriseInfoService/GetCargoTransportationInfo"
	AutoEnterpriseInfoService_GetDetailRepairInfo_FullMethodName         = "/main.AutoEnterpriseInfoService/GetDetailRepairInfo"
	AutoEnterpriseInfoService_GetTransportTransactionInfo_FullMethodName = "/main.AutoEnterpriseInfoService/GetTransportTransactionInfo"
	AutoEnterpriseInfoService_GetPersonnelServiceWorks_FullMethodName    = "/main.AutoEnterpriseInfoService/GetPersonnelServiceWorks"
)

// AutoEnterpriseInfoServiceClient is the client API for AutoEnterpriseInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AutoEnterpriseInfoServiceClient interface {
	GetTransportTypes(ctx context.Context, in *TransportTypeRequest, opts ...grpc.CallOption) (*TransportTypeResponse, error)
	GetCarPark(ctx context.Context, in *CarParkRequest, opts ...grpc.CallOption) (*CarParkResponse, error)
	GetDriversByTransport(ctx context.Context, in *DriversByTransportRequest, opts ...grpc.CallOption) (*DriversByTransportResponse, error)
	GetDriversInfo(ctx context.Context, in *DriversInfoRequest, opts ...grpc.CallOption) (*DriversInfoResponse, error)
	GetPassengerRoutesInfo(ctx context.Context, in *RoutesInfoRequest, opts ...grpc.CallOption) (*PassengerRoutesInfoResponse, error)
	GetTransportMileage(ctx context.Context, in *TransportMileageRequest, opts ...grpc.CallOption) (*TransportMileageResponse, error)
	GetTransportRepairCosts(ctx context.Context, in *TransportRepairCostsRequest, opts ...grpc.CallOption) (*TransportRepairCostsResponse, error)
	GetGarageInfo(ctx context.Context, in *GetGarageInfoRequest, opts ...grpc.CallOption) (*TransportRepairCostsResponse, error)
	GetCargoTransportationInfo(ctx context.Context, in *CargoTransportationInfoRequest, opts ...grpc.CallOption) (*CargoTransportationInfoResponse, error)
	GetDetailRepairInfo(ctx context.Context, in *DetailRepairInfoRequest, opts ...grpc.CallOption) (*DetailRepairInfoResponse, error)
	GetTransportTransactionInfo(ctx context.Context, in *TransportTransactionInfoRequest, opts ...grpc.CallOption) (*TransportTransactionInfoResponse, error)
	GetPersonnelServiceWorks(ctx context.Context, in *PersonnelServiceWorksRequest, opts ...grpc.CallOption) (*PersonnelServiceWorksResponse, error)
}

type autoEnterpriseInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAutoEnterpriseInfoServiceClient(cc grpc.ClientConnInterface) AutoEnterpriseInfoServiceClient {
	return &autoEnterpriseInfoServiceClient{cc}
}

func (c *autoEnterpriseInfoServiceClient) GetTransportTypes(ctx context.Context, in *TransportTypeRequest, opts ...grpc.CallOption) (*TransportTypeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(TransportTypeResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetTransportTypes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autoEnterpriseInfoServiceClient) GetCarPark(ctx context.Context, in *CarParkRequest, opts ...grpc.CallOption) (*CarParkResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CarParkResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetCarPark_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autoEnterpriseInfoServiceClient) GetDriversByTransport(ctx context.Context, in *DriversByTransportRequest, opts ...grpc.CallOption) (*DriversByTransportResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DriversByTransportResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetDriversByTransport_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autoEnterpriseInfoServiceClient) GetDriversInfo(ctx context.Context, in *DriversInfoRequest, opts ...grpc.CallOption) (*DriversInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DriversInfoResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetDriversInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autoEnterpriseInfoServiceClient) GetPassengerRoutesInfo(ctx context.Context, in *RoutesInfoRequest, opts ...grpc.CallOption) (*PassengerRoutesInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PassengerRoutesInfoResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetPassengerRoutesInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autoEnterpriseInfoServiceClient) GetTransportMileage(ctx context.Context, in *TransportMileageRequest, opts ...grpc.CallOption) (*TransportMileageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(TransportMileageResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetTransportMileage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autoEnterpriseInfoServiceClient) GetTransportRepairCosts(ctx context.Context, in *TransportRepairCostsRequest, opts ...grpc.CallOption) (*TransportRepairCostsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(TransportRepairCostsResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetTransportRepairCosts_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autoEnterpriseInfoServiceClient) GetGarageInfo(ctx context.Context, in *GetGarageInfoRequest, opts ...grpc.CallOption) (*TransportRepairCostsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(TransportRepairCostsResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetGarageInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autoEnterpriseInfoServiceClient) GetCargoTransportationInfo(ctx context.Context, in *CargoTransportationInfoRequest, opts ...grpc.CallOption) (*CargoTransportationInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CargoTransportationInfoResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetCargoTransportationInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autoEnterpriseInfoServiceClient) GetDetailRepairInfo(ctx context.Context, in *DetailRepairInfoRequest, opts ...grpc.CallOption) (*DetailRepairInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DetailRepairInfoResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetDetailRepairInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autoEnterpriseInfoServiceClient) GetTransportTransactionInfo(ctx context.Context, in *TransportTransactionInfoRequest, opts ...grpc.CallOption) (*TransportTransactionInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(TransportTransactionInfoResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetTransportTransactionInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autoEnterpriseInfoServiceClient) GetPersonnelServiceWorks(ctx context.Context, in *PersonnelServiceWorksRequest, opts ...grpc.CallOption) (*PersonnelServiceWorksResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PersonnelServiceWorksResponse)
	err := c.cc.Invoke(ctx, AutoEnterpriseInfoService_GetPersonnelServiceWorks_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AutoEnterpriseInfoServiceServer is the server API for AutoEnterpriseInfoService service.
// All implementations must embed UnimplementedAutoEnterpriseInfoServiceServer
// for forward compatibility.
type AutoEnterpriseInfoServiceServer interface {
	GetTransportTypes(context.Context, *TransportTypeRequest) (*TransportTypeResponse, error)
	GetCarPark(context.Context, *CarParkRequest) (*CarParkResponse, error)
	GetDriversByTransport(context.Context, *DriversByTransportRequest) (*DriversByTransportResponse, error)
	GetDriversInfo(context.Context, *DriversInfoRequest) (*DriversInfoResponse, error)
	GetPassengerRoutesInfo(context.Context, *RoutesInfoRequest) (*PassengerRoutesInfoResponse, error)
	GetTransportMileage(context.Context, *TransportMileageRequest) (*TransportMileageResponse, error)
	GetTransportRepairCosts(context.Context, *TransportRepairCostsRequest) (*TransportRepairCostsResponse, error)
	GetGarageInfo(context.Context, *GetGarageInfoRequest) (*TransportRepairCostsResponse, error)
	GetCargoTransportationInfo(context.Context, *CargoTransportationInfoRequest) (*CargoTransportationInfoResponse, error)
	GetDetailRepairInfo(context.Context, *DetailRepairInfoRequest) (*DetailRepairInfoResponse, error)
	GetTransportTransactionInfo(context.Context, *TransportTransactionInfoRequest) (*TransportTransactionInfoResponse, error)
	GetPersonnelServiceWorks(context.Context, *PersonnelServiceWorksRequest) (*PersonnelServiceWorksResponse, error)
	mustEmbedUnimplementedAutoEnterpriseInfoServiceServer()
}

// UnimplementedAutoEnterpriseInfoServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedAutoEnterpriseInfoServiceServer struct{}

func (UnimplementedAutoEnterpriseInfoServiceServer) GetTransportTypes(context.Context, *TransportTypeRequest) (*TransportTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransportTypes not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) GetCarPark(context.Context, *CarParkRequest) (*CarParkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCarPark not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) GetDriversByTransport(context.Context, *DriversByTransportRequest) (*DriversByTransportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDriversByTransport not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) GetDriversInfo(context.Context, *DriversInfoRequest) (*DriversInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDriversInfo not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) GetPassengerRoutesInfo(context.Context, *RoutesInfoRequest) (*PassengerRoutesInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPassengerRoutesInfo not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) GetTransportMileage(context.Context, *TransportMileageRequest) (*TransportMileageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransportMileage not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) GetTransportRepairCosts(context.Context, *TransportRepairCostsRequest) (*TransportRepairCostsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransportRepairCosts not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) GetGarageInfo(context.Context, *GetGarageInfoRequest) (*TransportRepairCostsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGarageInfo not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) GetCargoTransportationInfo(context.Context, *CargoTransportationInfoRequest) (*CargoTransportationInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCargoTransportationInfo not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) GetDetailRepairInfo(context.Context, *DetailRepairInfoRequest) (*DetailRepairInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDetailRepairInfo not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) GetTransportTransactionInfo(context.Context, *TransportTransactionInfoRequest) (*TransportTransactionInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransportTransactionInfo not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) GetPersonnelServiceWorks(context.Context, *PersonnelServiceWorksRequest) (*PersonnelServiceWorksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPersonnelServiceWorks not implemented")
}
func (UnimplementedAutoEnterpriseInfoServiceServer) mustEmbedUnimplementedAutoEnterpriseInfoServiceServer() {
}
func (UnimplementedAutoEnterpriseInfoServiceServer) testEmbeddedByValue() {}

// UnsafeAutoEnterpriseInfoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AutoEnterpriseInfoServiceServer will
// result in compilation errors.
type UnsafeAutoEnterpriseInfoServiceServer interface {
	mustEmbedUnimplementedAutoEnterpriseInfoServiceServer()
}

func RegisterAutoEnterpriseInfoServiceServer(s grpc.ServiceRegistrar, srv AutoEnterpriseInfoServiceServer) {
	// If the following call pancis, it indicates UnimplementedAutoEnterpriseInfoServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&AutoEnterpriseInfoService_ServiceDesc, srv)
}

func _AutoEnterpriseInfoService_GetTransportTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransportTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetTransportTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetTransportTypes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetTransportTypes(ctx, req.(*TransportTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AutoEnterpriseInfoService_GetCarPark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarParkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetCarPark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetCarPark_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetCarPark(ctx, req.(*CarParkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AutoEnterpriseInfoService_GetDriversByTransport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DriversByTransportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetDriversByTransport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetDriversByTransport_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetDriversByTransport(ctx, req.(*DriversByTransportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AutoEnterpriseInfoService_GetDriversInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DriversInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetDriversInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetDriversInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetDriversInfo(ctx, req.(*DriversInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AutoEnterpriseInfoService_GetPassengerRoutesInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoutesInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetPassengerRoutesInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetPassengerRoutesInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetPassengerRoutesInfo(ctx, req.(*RoutesInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AutoEnterpriseInfoService_GetTransportMileage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransportMileageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetTransportMileage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetTransportMileage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetTransportMileage(ctx, req.(*TransportMileageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AutoEnterpriseInfoService_GetTransportRepairCosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransportRepairCostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetTransportRepairCosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetTransportRepairCosts_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetTransportRepairCosts(ctx, req.(*TransportRepairCostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AutoEnterpriseInfoService_GetGarageInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGarageInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetGarageInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetGarageInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetGarageInfo(ctx, req.(*GetGarageInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AutoEnterpriseInfoService_GetCargoTransportationInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CargoTransportationInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetCargoTransportationInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetCargoTransportationInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetCargoTransportationInfo(ctx, req.(*CargoTransportationInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AutoEnterpriseInfoService_GetDetailRepairInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailRepairInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetDetailRepairInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetDetailRepairInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetDetailRepairInfo(ctx, req.(*DetailRepairInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AutoEnterpriseInfoService_GetTransportTransactionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransportTransactionInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetTransportTransactionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetTransportTransactionInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetTransportTransactionInfo(ctx, req.(*TransportTransactionInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AutoEnterpriseInfoService_GetPersonnelServiceWorks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PersonnelServiceWorksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoEnterpriseInfoServiceServer).GetPersonnelServiceWorks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AutoEnterpriseInfoService_GetPersonnelServiceWorks_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoEnterpriseInfoServiceServer).GetPersonnelServiceWorks(ctx, req.(*PersonnelServiceWorksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AutoEnterpriseInfoService_ServiceDesc is the grpc.ServiceDesc for AutoEnterpriseInfoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AutoEnterpriseInfoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "main.AutoEnterpriseInfoService",
	HandlerType: (*AutoEnterpriseInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTransportTypes",
			Handler:    _AutoEnterpriseInfoService_GetTransportTypes_Handler,
		},
		{
			MethodName: "GetCarPark",
			Handler:    _AutoEnterpriseInfoService_GetCarPark_Handler,
		},
		{
			MethodName: "GetDriversByTransport",
			Handler:    _AutoEnterpriseInfoService_GetDriversByTransport_Handler,
		},
		{
			MethodName: "GetDriversInfo",
			Handler:    _AutoEnterpriseInfoService_GetDriversInfo_Handler,
		},
		{
			MethodName: "GetPassengerRoutesInfo",
			Handler:    _AutoEnterpriseInfoService_GetPassengerRoutesInfo_Handler,
		},
		{
			MethodName: "GetTransportMileage",
			Handler:    _AutoEnterpriseInfoService_GetTransportMileage_Handler,
		},
		{
			MethodName: "GetTransportRepairCosts",
			Handler:    _AutoEnterpriseInfoService_GetTransportRepairCosts_Handler,
		},
		{
			MethodName: "GetGarageInfo",
			Handler:    _AutoEnterpriseInfoService_GetGarageInfo_Handler,
		},
		{
			MethodName: "GetCargoTransportationInfo",
			Handler:    _AutoEnterpriseInfoService_GetCargoTransportationInfo_Handler,
		},
		{
			MethodName: "GetDetailRepairInfo",
			Handler:    _AutoEnterpriseInfoService_GetDetailRepairInfo_Handler,
		},
		{
			MethodName: "GetTransportTransactionInfo",
			Handler:    _AutoEnterpriseInfoService_GetTransportTransactionInfo_Handler,
		},
		{
			MethodName: "GetPersonnelServiceWorks",
			Handler:    _AutoEnterpriseInfoService_GetPersonnelServiceWorks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/auto_enterprise.proto",
}
