// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.2
// source: proto/report_service.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CarMileageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      *string                `protobuf:"bytes,1,opt,name=category,proto3,oneof" json:"category,omitempty"`
	TransportId   *int32                 `protobuf:"varint,2,opt,name=transportId,proto3,oneof" json:"transportId,omitempty"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=dateFrom,proto3" json:"dateFrom,omitempty"`
	DateTo        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=dateTo,proto3" json:"dateTo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CarMileageRequest) Reset() {
	*x = CarMileageRequest{}
	mi := &file_proto_report_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CarMileageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarMileageRequest) ProtoMessage() {}

func (x *CarMileageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarMileageRequest.ProtoReflect.Descriptor instead.
func (*CarMileageRequest) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{0}
}

func (x *CarMileageRequest) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *CarMileageRequest) GetTransportId() int32 {
	if x != nil && x.TransportId != nil {
		return *x.TransportId
	}
	return 0
}

func (x *CarMileageRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *CarMileageRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

type RepairCostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      *string                `protobuf:"bytes,1,opt,name=category,proto3,oneof" json:"category,omitempty"`
	Brand         *string                `protobuf:"bytes,5,opt,name=brand,proto3,oneof" json:"brand,omitempty"`
	TransportId   *int32                 `protobuf:"varint,2,opt,name=transportId,proto3,oneof" json:"transportId,omitempty"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=dateFrom,proto3" json:"dateFrom,omitempty"`
	DateTo        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=dateTo,proto3" json:"dateTo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepairCostRequest) Reset() {
	*x = RepairCostRequest{}
	mi := &file_proto_report_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepairCostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairCostRequest) ProtoMessage() {}

func (x *RepairCostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairCostRequest.ProtoReflect.Descriptor instead.
func (*RepairCostRequest) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{1}
}

func (x *RepairCostRequest) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *RepairCostRequest) GetBrand() string {
	if x != nil && x.Brand != nil {
		return *x.Brand
	}
	return ""
}

func (x *RepairCostRequest) GetTransportId() int32 {
	if x != nil && x.TransportId != nil {
		return *x.TransportId
	}
	return 0
}

func (x *RepairCostRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *RepairCostRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

type CarMileageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CarMileage    map[string]float32     `protobuf:"bytes,1,rep,name=carMileage,proto3" json:"carMileage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CarMileageResponse) Reset() {
	*x = CarMileageResponse{}
	mi := &file_proto_report_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CarMileageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarMileageResponse) ProtoMessage() {}

func (x *CarMileageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarMileageResponse.ProtoReflect.Descriptor instead.
func (*CarMileageResponse) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{2}
}

func (x *CarMileageResponse) GetCarMileage() map[string]float32 {
	if x != nil {
		return x.CarMileage
	}
	return nil
}

type RepairCost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sum           float32                `protobuf:"fixed32,2,opt,name=sum,proto3" json:"sum,omitempty"`
	RepairNum     int32                  `protobuf:"varint,3,opt,name=repairNum,proto3" json:"repairNum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepairCost) Reset() {
	*x = RepairCost{}
	mi := &file_proto_report_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepairCost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairCost) ProtoMessage() {}

func (x *RepairCost) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairCost.ProtoReflect.Descriptor instead.
func (*RepairCost) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{3}
}

func (x *RepairCost) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RepairCost) GetSum() float32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *RepairCost) GetRepairNum() int32 {
	if x != nil {
		return x.RepairNum
	}
	return 0
}

type RepairCostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Costs         []*RepairCost          `protobuf:"bytes,1,rep,name=costs,proto3" json:"costs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepairCostResponse) Reset() {
	*x = RepairCostResponse{}
	mi := &file_proto_report_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepairCostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairCostResponse) ProtoMessage() {}

func (x *RepairCostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairCostResponse.ProtoReflect.Descriptor instead.
func (*RepairCostResponse) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{4}
}

func (x *RepairCostResponse) GetCosts() []*RepairCost {
	if x != nil {
		return x.Costs
	}
	return nil
}

type DriversDistributionResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	DriversDistribution map[string]string      `protobuf:"bytes,1,rep,name=driversDistribution,proto3" json:"driversDistribution,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DriversDistributionResponse) Reset() {
	*x = DriversDistributionResponse{}
	mi := &file_proto_report_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriversDistributionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriversDistributionResponse) ProtoMessage() {}

func (x *DriversDistributionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriversDistributionResponse.ProtoReflect.Descriptor instead.
func (*DriversDistributionResponse) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{5}
}

func (x *DriversDistributionResponse) GetDriversDistribution() map[string]string {
	if x != nil {
		return x.DriversDistribution
	}
	return nil
}

type PassengerTransportDistributionResponse struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	PassengerTransportDistribution map[string]string      `protobuf:"bytes,1,rep,name=passengerTransportDistribution,proto3" json:"passengerTransportDistribution,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *PassengerTransportDistributionResponse) Reset() {
	*x = PassengerTransportDistributionResponse{}
	mi := &file_proto_report_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PassengerTransportDistributionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassengerTransportDistributionResponse) ProtoMessage() {}

func (x *PassengerTransportDistributionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassengerTransportDistributionResponse.ProtoReflect.Descriptor instead.
func (*PassengerTransportDistributionResponse) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{6}
}

func (x *PassengerTransportDistributionResponse) GetPassengerTransportDistribution() map[string]string {
	if x != nil {
		return x.PassengerTransportDistribution
	}
	return nil
}

type Subordination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PersonName    string                 `protobuf:"bytes,1,opt,name=person_name,json=personName,proto3" json:"person_name,omitempty"`
	PersonId      int32                  `protobuf:"varint,2,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`
	Role          string                 `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	Subordinates  []*Subordination       `protobuf:"bytes,3,rep,name=subordinates,proto3" json:"subordinates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subordination) Reset() {
	*x = Subordination{}
	mi := &file_proto_report_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subordination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subordination) ProtoMessage() {}

func (x *Subordination) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subordination.ProtoReflect.Descriptor instead.
func (*Subordination) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{7}
}

func (x *Subordination) GetPersonName() string {
	if x != nil {
		return x.PersonName
	}
	return ""
}

func (x *Subordination) GetPersonId() int32 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *Subordination) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Subordination) GetSubordinates() []*Subordination {
	if x != nil {
		return x.Subordinates
	}
	return nil
}

type SubordinationResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Subordinations []*Subordination       `protobuf:"bytes,1,rep,name=subordinations,proto3" json:"subordinations,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubordinationResponse) Reset() {
	*x = SubordinationResponse{}
	mi := &file_proto_report_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubordinationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubordinationResponse) ProtoMessage() {}

func (x *SubordinationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubordinationResponse.ProtoReflect.Descriptor instead.
func (*SubordinationResponse) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{8}
}

func (x *SubordinationResponse) GetSubordinations() []*Subordination {
	if x != nil {
		return x.Subordinations
	}
	return nil
}

type TransportByGarageDistributionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mapping       map[string]string      `protobuf:"bytes,1,rep,name=mapping,proto3" json:"mapping,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransportByGarageDistributionResponse) Reset() {
	*x = TransportByGarageDistributionResponse{}
	mi := &file_proto_report_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransportByGarageDistributionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportByGarageDistributionResponse) ProtoMessage() {}

func (x *TransportByGarageDistributionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportByGarageDistributionResponse.ProtoReflect.Descriptor instead.
func (*TransportByGarageDistributionResponse) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{9}
}

func (x *TransportByGarageDistributionResponse) GetMapping() map[string]string {
	if x != nil {
		return x.Mapping
	}
	return nil
}

type SubordinationRequest struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Filter        *SubordinationRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubordinationRequest) Reset() {
	*x = SubordinationRequest{}
	mi := &file_proto_report_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubordinationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubordinationRequest) ProtoMessage() {}

func (x *SubordinationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubordinationRequest.ProtoReflect.Descriptor instead.
func (*SubordinationRequest) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{10}
}

func (x *SubordinationRequest) GetFilter() *SubordinationRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type SubordinationRequest_Filter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PersonId      int32                  `protobuf:"varint,1,opt,name=personId,proto3" json:"personId,omitempty"`
	PersonRole    string                 `protobuf:"bytes,2,opt,name=personRole,proto3" json:"personRole,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubordinationRequest_Filter) Reset() {
	*x = SubordinationRequest_Filter{}
	mi := &file_proto_report_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubordinationRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubordinationRequest_Filter) ProtoMessage() {}

func (x *SubordinationRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubordinationRequest_Filter.ProtoReflect.Descriptor instead.
func (*SubordinationRequest_Filter) Descriptor() ([]byte, []int) {
	return file_proto_report_service_proto_rawDescGZIP(), []int{10, 0}
}

func (x *SubordinationRequest_Filter) GetPersonId() int32 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *SubordinationRequest_Filter) GetPersonRole() string {
	if x != nil {
		return x.PersonRole
	}
	return ""
}

var File_proto_report_service_proto protoreflect.FileDescriptor

var file_proto_report_service_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61,
	0x69, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe4, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x4d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x36,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x32, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x89, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02,
	0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x36, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x32, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x4d, 0x69, 0x6c, 0x65, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x63, 0x61,
	0x72, 0x4d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x61, 0x72, 0x4d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x4d, 0x69, 0x6c, 0x65,
	0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x4d, 0x69, 0x6c,
	0x65, 0x61, 0x67, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x4d, 0x69, 0x6c, 0x65, 0x61,
	0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x50, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x4e, 0x75, 0x6d, 0x22, 0x3c, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x43,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x63,
	0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x63, 0x6f,
	0x73, 0x74, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x1b, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x13, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x46, 0x0a, 0x18, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x02, 0x0a, 0x26, 0x50, 0x61,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x1e, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x1e, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x51, 0x0a, 0x23, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x9a, 0x01, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x22,
	0x54, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x25, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x47, 0x61, 0x72, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x42, 0x79, 0x47, 0x61, 0x72, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x1a, 0x3a, 0x0a, 0x0c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xa7, 0x01, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x1a, 0x44, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x32, 0x99, 0x04, 0x0a, 0x0d, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x47, 0x61, 0x72,
	0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x47, 0x61, 0x72, 0x61, 0x67, 0x65,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x53, 0x75, 0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x75,
	0x62, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x4d,
	0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x61,
	0x72, 0x4d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x61, 0x72, 0x4d, 0x69, 0x6c, 0x65, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x55, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_proto_report_service_proto_rawDescOnce sync.Once
	file_proto_report_service_proto_rawDescData []byte
)

func file_proto_report_service_proto_rawDescGZIP() []byte {
	file_proto_report_service_proto_rawDescOnce.Do(func() {
		file_proto_report_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_report_service_proto_rawDesc), len(file_proto_report_service_proto_rawDesc)))
	})
	return file_proto_report_service_proto_rawDescData
}

var file_proto_report_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_report_service_proto_goTypes = []any{
	(*CarMileageRequest)(nil),                      // 0: main.CarMileageRequest
	(*RepairCostRequest)(nil),                      // 1: main.RepairCostRequest
	(*CarMileageResponse)(nil),                     // 2: main.CarMileageResponse
	(*RepairCost)(nil),                             // 3: main.RepairCost
	(*RepairCostResponse)(nil),                     // 4: main.RepairCostResponse
	(*DriversDistributionResponse)(nil),            // 5: main.DriversDistributionResponse
	(*PassengerTransportDistributionResponse)(nil), // 6: main.PassengerTransportDistributionResponse
	(*Subordination)(nil),                          // 7: main.Subordination
	(*SubordinationResponse)(nil),                  // 8: main.SubordinationResponse
	(*TransportByGarageDistributionResponse)(nil),  // 9: main.TransportByGarageDistributionResponse
	(*SubordinationRequest)(nil),                   // 10: main.SubordinationRequest
	nil,                                            // 11: main.CarMileageResponse.CarMileageEntry
	nil,                                            // 12: main.DriversDistributionResponse.DriversDistributionEntry
	nil,                                            // 13: main.PassengerTransportDistributionResponse.PassengerTransportDistributionEntry
	nil,                                            // 14: main.TransportByGarageDistributionResponse.MappingEntry
	(*SubordinationRequest_Filter)(nil),            // 15: main.SubordinationRequest.Filter
	(*timestamppb.Timestamp)(nil),                  // 16: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                          // 17: google.protobuf.Empty
}
var file_proto_report_service_proto_depIdxs = []int32{
	16, // 0: main.CarMileageRequest.dateFrom:type_name -> google.protobuf.Timestamp
	16, // 1: main.CarMileageRequest.dateTo:type_name -> google.protobuf.Timestamp
	16, // 2: main.RepairCostRequest.dateFrom:type_name -> google.protobuf.Timestamp
	16, // 3: main.RepairCostRequest.dateTo:type_name -> google.protobuf.Timestamp
	11, // 4: main.CarMileageResponse.carMileage:type_name -> main.CarMileageResponse.CarMileageEntry
	3,  // 5: main.RepairCostResponse.costs:type_name -> main.RepairCost
	12, // 6: main.DriversDistributionResponse.driversDistribution:type_name -> main.DriversDistributionResponse.DriversDistributionEntry
	13, // 7: main.PassengerTransportDistributionResponse.passengerTransportDistribution:type_name -> main.PassengerTransportDistributionResponse.PassengerTransportDistributionEntry
	7,  // 8: main.Subordination.subordinates:type_name -> main.Subordination
	7,  // 9: main.SubordinationResponse.subordinations:type_name -> main.Subordination
	14, // 10: main.TransportByGarageDistributionResponse.mapping:type_name -> main.TransportByGarageDistributionResponse.MappingEntry
	15, // 11: main.SubordinationRequest.filter:type_name -> main.SubordinationRequest.Filter
	17, // 12: main.ReportService.GetTransportByGarageDistribution:input_type -> google.protobuf.Empty
	10, // 13: main.ReportService.GetSubordination:input_type -> main.SubordinationRequest
	0,  // 14: main.ReportService.GetCarMileage:input_type -> main.CarMileageRequest
	1,  // 15: main.ReportService.GetRepairCost:input_type -> main.RepairCostRequest
	17, // 16: main.ReportService.GetDriversDistribution:input_type -> google.protobuf.Empty
	17, // 17: main.ReportService.GetPassengerTransportDistribution:input_type -> google.protobuf.Empty
	9,  // 18: main.ReportService.GetTransportByGarageDistribution:output_type -> main.TransportByGarageDistributionResponse
	8,  // 19: main.ReportService.GetSubordination:output_type -> main.SubordinationResponse
	2,  // 20: main.ReportService.GetCarMileage:output_type -> main.CarMileageResponse
	4,  // 21: main.ReportService.GetRepairCost:output_type -> main.RepairCostResponse
	5,  // 22: main.ReportService.GetDriversDistribution:output_type -> main.DriversDistributionResponse
	6,  // 23: main.ReportService.GetPassengerTransportDistribution:output_type -> main.PassengerTransportDistributionResponse
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_report_service_proto_init() }
func file_proto_report_service_proto_init() {
	if File_proto_report_service_proto != nil {
		return
	}
	file_proto_report_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_report_service_proto_msgTypes[1].OneofWrappers = []any{}
	file_proto_report_service_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_report_service_proto_rawDesc), len(file_proto_report_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_report_service_proto_goTypes,
		DependencyIndexes: file_proto_report_service_proto_depIdxs,
		MessageInfos:      file_proto_report_service_proto_msgTypes,
	}.Build()
	File_proto_report_service_proto = out.File
	file_proto_report_service_proto_goTypes = nil
	file_proto_report_service_proto_depIdxs = nil
}
